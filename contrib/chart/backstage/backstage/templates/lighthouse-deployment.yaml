---
# Source: backstage/templates/lighthouse-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: backstage-lighthouse

spec:
  ports:
    - port: 80
      targetPort: 3003

  selector:
    app: backstage
    component: lighthouse-audit-service

  type: ClusterIP
---
# Source: backstage/templates/lighthouse-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage-lighthouse

spec:
  replicas: 1

  selector:
    matchLabels:
      app: backstage
      component: lighthouse-audit-service

  template:
    metadata:
      annotations:
        ad.datadoghq.com/backstage.logs: '[{"source":"backstage","service":"lighthouse"}]'
      labels:
        app: backstage
        component: lighthouse-audit-service

    spec:
      containers:
        - name: lighthouse-audit-service
          image: roadiehq/lighthouse-audit-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3003
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 128Mi

          envFrom:
            - configMapRef:
                name: backstage-lighthouse
            - configMapRef:
                name: backstage-app-env

          env:
            - name: LAS_PORT
              value: "3003"
            - name: LAS_CORS
              value: "true"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: backstage-postgresql
                  key: postgresql-password
          volumeMounts:
            - name: postgres-ca
              mountPath: /etc/postgresql
      volumes:
        - name: postgres-ca
          configMap:
            name: backstage-postgres-ca
